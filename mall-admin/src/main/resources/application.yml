#定义公共配置
server:
  servlet:
    context-path: /rystars
#多环境配置文件下 选取配置文件 不同配置文件是互补的状态
spring:
  profiles:
    active: dev
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---数据源--->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  datasource:
    #定义数据源 使用阿里的Druid连接池
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #多数据源用来区分名称
      name: dev
      #初始化时建立连接的个数
      initialSize: 5
      #最小连接数 与初始数相同
      minIdle: 5
      #最大连接池数量
      maxActive: 300
      #	获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
      #如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      maxWait: 60000
      #检查空闲连接的频率，单位毫秒, 非正整数时表示不进行检查
      timeBetweenEvictionRunsMillis: 60000
      #连接保持空闲而不被驱逐的最长时间
      minEvictableIdleTimeMillis: 300000
      #用来检测连接是否有效的sql
      validationQuery: SELECT 1
      #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
      #如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testWhileIdle: true
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      testOnBorrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false
      #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，
      #比如说oracle。在mysql下建议关闭。
      poolPreparedStatements: false
      #每个连接最多缓存多少个SQL
      maxPoolPreparedStatementPerConnectionSize: 20
      #连接属性 记录慢SQL
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      #合并多个datasource监控数据
      use-global-data-source-stat: true
      #配置监控统计拦截的filters，stat:监控统计 log4j:日志记录 wall:防御sql注入
      #如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority 则导入 log4j 依赖即可
      filters: stat,wall,slf4j
      # 配置DruidStatFilter 监控web
      web-stat-filter:
        enabled: true
        #过滤所有url
        url-pattern: /*
        #配置不用拦截的资源
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet 监控页功能
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow:
        # IP黑名单 (存在共同时，deny优先于allow)
        deny:
        #  禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: RYSTARS(WptxGMlH7Af5o2Uj6+qx/w==)
        # 登录密码
        login-password: RYSTARS(0HYbnoWkN6RE4Ap98eu72zPrgcHLbJUm)
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<---数据源---<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---mybatis--->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#mybatis配置  更换为mybatis-plus的配置了
#mybatis:
  #配置扫描xml路径
  #mapper-locations: classpath*:mapper/**/*Mapper.xml
  #配置类型别名
  #type-aliases-package: com.rystars.mall.admin.**.bean
  #打印执行SQL
  #configuration:
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus:
  #配置扫描xml路径
  mapper-locations: classpath*:mapper/**/*Mapper.xml
  #配置类型别名
  type-aliases-package: com.rystars.mall.admin.**.bean
  #打印执行SQL
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#分页插件配置
page helper:
  #配置使用的方言 不配置会自动检测
  helper-dialect: mysql
  #使用参数合理化 如果传入错误的 开始 结束页数,会返回第一页或最后一页，false返回空。
  reasonable: true
#mybatis xml文件热加载配置
mybatis-xml-reload:
  # 是否开启 xml 热更新，true开启，false不开启，默认为false
  enabled: true
  # xml文件路径，可以填写多个，逗号分隔。
  # eg: `classpath*:mapper/**/*Mapper.xml,classpath*:other/**/*Mapper.xml`
  mapper-locations: classpath*:mapper/**/*Mapper.xml
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<---mybatis---<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---swagger--->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#swagger配置
springdoc:
  swagger-ui:
    #配置swagger-ui请求路径
    path: swagger
    #API的排序方式 alpha按字母排序
    tags-sorter: alpha
    #按HTTP方式排序
    #operations-sorter: method
  #需要生成接口的接口路径
  paths-to-match: /pms/**,/cms/**
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<---swagger---<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---jasypt--->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#使用jasypt对配置文件加密
jasypt:
  encryptor:
    iv-generator-classname: org.jasypt.iv.NoIvGenerator
    #配置加密算法
    algorithm: PBEWithMD5AndDES
    #解析的字符
    property:
      prefix: RYSTARS(
      suffix: )
#    password: ${JASYPT_ENCRYPTOR_PASSWORD:}
    #加密口令
#    方式一：直接作为程序启动时的命令行参数来带入 java -jar project.jar --jasypt.encryptor.password=xxx
#    方式二：直接作为程序启动时的应用环境变量来带入VM java -Djasypt.encryptor.password=xxx -jar project.jar
#    方式三：甚至可以作为系统环境变量的方式来带入 jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD:}
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<---jasypt---<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
